// Generated by CoffeeScript 1.6.3
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

module.exports = function(BasePlugin) {
  var UmdPlugin, _ref;
  return UmdPlugin = (function(_super) {
    __extends(UmdPlugin, _super);

    function UmdPlugin() {
      _ref = UmdPlugin.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    UmdPlugin.prototype.name = 'umd';

    UmdPlugin.prototype.renderDocument = function(opts) {
      var prefix, strippedContent, suffix;
      if (opts.extension === 'js' && opts.file.get('umd') === true) {
        prefix = ("/*global define:false require:false */\n(function (name, context, definition) {\n	if (typeof module !== 'undefined' && module.exports) module.exports = definition();\n	else if (typeof define === 'function' && define.amd) define(definition);\n	else if (typeof provide === 'function') provide(name, definition());\n	else context[name] = definition();\n})('" + (opts.file.get('basename')) + "', this, ").trim();
        suffix = ');';
        if (opts.content.indexOf(prefix) === -1) {
          strippedContent = opts.content.replace(/^function\s*\(\s*\)\s*\{\s*/, '').replace(/\s*(\(\)|.call\(this\));?\s*$/, '');
          if (strippedContent[0] === '(' && strippedContent.substr(-1) === ')') {
            strippedContent = strippedContent.substring(1, strippedContent.length - 1).replace(/^\s|\s$/g, '');
          }
          if (!/^function/.test(strippedContent)) {
            strippedContent = 'function(){\n' + strippedContent + '\n}';
          }
          opts.content = prefix + ' ' + strippedContent + suffix;
        }
      }
    };

    return UmdPlugin;

  })(BasePlugin);
};
